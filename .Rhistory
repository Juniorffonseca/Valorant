compute(n, partida)
View(partida)
previsao <- compute(n, partida)
previsao$net.result
partida <- scale(partida)
partida <- as.data.frame(scale(partida))
View(partida)
# Carregando o modelo
load(file = "model_nnet.rda")
# Carregando o dataframe jogadores
dados_gerais <- read.csv2('csv/jogadores.csv')
# Arrumando as colunas
dados_gerais <- dplyr::select(dados_gerais, Player, R, ACS, K.D, KAST, ADR)
row.names(dados_gerais) <- make.names(dados_gerais[,1], unique = T)
dados_gerais <- dplyr::select(dados_gerais, -Player)
dados_gerais$KAST <- parse_number(dados_gerais$KAST)
# Time A
timeA = c('ZmjjKK', 'CHICHOO', 'nobody', 'Smoggy', 'Haodong')
timeA <- paste0('\\b', timeA, '\\b')
dados_gerais$timeA <- ifelse(grepl(paste(timeA, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
dados_gerais['nobody.1',]$timeA <- 0
# Time B
timeB = c('Yuicaw', 'YuChEn', 'berLIN', 'AAAAY', 'nizhaoTZH')
timeB <- paste0('\\b', timeB, '\\b')
dados_gerais$timeB <- ifelse(grepl(paste(timeB, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
timeA_df <- filter(dados_gerais, dados_gerais$timeA == 1)
timeA_df <- dplyr::select(timeA_df, R, ACS, K.D, KAST, ADR)
timeB_df <- filter(dados_gerais, dados_gerais$timeB == 1)
timeB_df <- dplyr::select(timeB_df, R, ACS, K.D, KAST, ADR)
# Médias
timeA_R <- mean(timeA_df$R)
timeA_ACS <- mean(timeA_df$ACS)
timeA_KAST <- mean(timeA_df$KAST)
timeA_KD <- mean(timeA_df$K.D)
timeA_ADR <- mean(timeA_df$ADR)
timeB_R <- mean(timeB_df$R)
timeB_ACS <- mean(timeB_df$ACS)
timeB_KAST <- mean(timeB_df$KAST)
timeB_KD <- mean(timeB_df$K.D)
timeB_ADR <- mean(timeB_df$ADR)
partida <- data.frame(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- as.data.frame(scale(partida))
View(partida)
partida <- data.frame(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
View(partida)
scale(partida)
n <- readRDS("~/TCC Pós/Scripts/n.rds")
View(n)
load("~/TCC Pós/Scripts/model_nnet.rda")
n <- readRDS("~/TCC Pós/Scripts/n.rds")
load("~/TCC Pós/Scripts/model_nnet.rda")
n <- readRDS("~/TCC Pós/Scripts/n.rds")
load("~/TCC Pós/Scripts/model_nnet.rda")
View(partida)
?scale
partida <- as.data.frame(scale(partida, scale = T))
View(partida)
partida <- data.frame(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
data = c(1200,34567,3456,12,3456,0985,1211)
data
rm(data)
partida <- (timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- as.data.frame(scale(partida, scale = T))
View(partida)
partida <- as.data.frame(c((scale(partida, scale = T)))
partida <- as.data.frame(c((scale(partida, scale = T))))
View(partida)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida, scale = T)
partida <- as.data.frame(partida)
View(partida)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida, scale = T)
?reshape
partida <- as.data.frame(partida)
View(partida)
reshape(partida)
reshape(partida, direction = 'wide')
View(partida)
library(reshape2)
?dcast
View(partida)
dcast(partida, 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 ~ V1, fill = 0)
teste <- dcast(partida, 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 ~ V1, fill = 0)
View(teste)
teste <- dcast(partida, V1, fill = 0)
teste <- dcast(partida, sample ~~V1, fill = 0)
teste <- dcast(partida, sample ~ V1, fill = 0)
teste <- dcast(partida, 1 ~ V1, fill = 0)
teste <- dcast(partida, ~ V1, fill = 0)
teste <- dcast(partida, 1 ~ V1, fill = 0)
teste <- dcast(partida, # ~ V1, fill = 0)
a
teste <- dcast(partida, 1 ~ V1, fill = 0)
teste <- dcast(partida, 1 ~ V1, fill = 0, value.var = 1)
teste <- dcast(partida, 1 ~ V1, fill = 0, value.var = range(1,10))
1_10 <- range(1,10)
z1_10 <- range(1,10)
c <- c(1,2,3,4,5,6,7,8,9,10)
teste <- dcast(partida, 1 ~ V1, fill = 0, value.var = c
)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida, scale = T)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
View(partida)
teste <- dcast(partida, row.names ~ V1, fill = 0, value.var = c
)
teste <- dcast(partida, row.names ~ V1, fill = 0, value.var = 1
)
teste <- dcast(partida, row.names ~ V1, fill = 0)
teste <- dcast(partida, 1 ~ V1, fill = 0)
View(teste)
partida <- dcast(partida, 1 ~ V1, fill = 0)
View(partida)
partida <- partida[-1,]
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
partida <- dcast(partida, 1 ~ V1, fill = 0)
partida <- partida[,-1]
View(partida)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
partida <- dcast(partida, 1 ~ V1, fill = 0)
partida <- partida[,-1]
?colnames
colnames(partida) <- (timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
colnames(partida) <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
View(partida)
View(partida)
previsao <- compute(n, partida)
previsao$net.result
colnames(partida) <- c('timeA_R', 'timeB_R', 'timeA_ACS', 'timeB_ACS', 'timeA_KAST', 'timeB_KAST', 'timeA_KD', 'timeB_KD',
'timeA_ADR', 'timeB_ADR')
View(partida)
previsao <- compute(n, partida)
previsao$net.result
# Time B
timeB = c('Life', 'bunt', 'YHchen', 'hfmi0dzjc9z7', 'monk')
# Time A
timeA = c('YorkMonster', 'Spring', 'Eren', 'B3Ar', 'AC')
timeA <- paste0('\\b', timeA, '\\b')
dados_gerais$timeA <- ifelse(grepl(paste(timeA, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
dados_gerais['nobody.1',]$timeA <- 0
# Time B
timeB = c('Life', 'bunt', 'YHchen', 'hfmi0dzjc9z7', 'monk')
timeB <- paste0('\\b', timeB, '\\b')
dados_gerais$timeB <- ifelse(grepl(paste(timeB, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
timeA_df <- filter(dados_gerais, dados_gerais$timeA == 1)
timeA_df <- dplyr::select(timeA_df, R, ACS, K.D, KAST, ADR)
timeB_df <- filter(dados_gerais, dados_gerais$timeB == 1)
timeB_df <- dplyr::select(timeB_df, R, ACS, K.D, KAST, ADR)
# Médias
timeA_R <- mean(timeA_df$R)
timeA_ACS <- mean(timeA_df$ACS)
timeA_KAST <- mean(timeA_df$KAST)
timeA_KD <- mean(timeA_df$K.D)
timeA_ADR <- mean(timeA_df$ADR)
timeB_R <- mean(timeB_df$R)
timeB_ACS <- mean(timeB_df$ACS)
timeB_KAST <- mean(timeB_df$KAST)
timeB_KD <- mean(timeB_df$K.D)
timeB_ADR <- mean(timeB_df$ADR)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
partida <- dcast(partida, 1 ~ V1, fill = 0)
partida <- partida[,-1]
colnames(partida) <- c('timeA_R', 'timeB_R', 'timeA_ACS', 'timeB_ACS', 'timeA_KAST', 'timeB_KAST', 'timeA_KD', 'timeB_KD',
'timeA_ADR', 'timeB_ADR')
previsao <- compute(n, partida)
previsao$net.result
install.packages('rjson')
library(rjson)
result <- fromJSON(file = 'json/resultado.json')
result <- fromJSON(file = '/json/resultado.json')
result <- fromJSON(file = 'json/resultado.json')
result <- fromJSON(file = 'json/resultado')
library('rjson')
fromJSON
?fromJSON
result <- rjson::fromJSON(file = 'json/resultado.json')
# Carregando pacotes --------------------------------------------------------------------------------------
library(dplyr)
library(tidyr)
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(rjson)
# Carregando o modelo
load(file = "model_nnet.rda")
# Carregando o dataframe jogadores
dados_gerais <- read.csv2('csv/jogadores.csv')
# Arrumando as colunas
dados_gerais <- dplyr::select(dados_gerais, Player, R, ACS, K.D, KAST, ADR)
row.names(dados_gerais) <- make.names(dados_gerais[,1], unique = T)
dados_gerais <- dplyr::select(dados_gerais, -Player)
dados_gerais$KAST <- parse_number(dados_gerais$KAST)
# Time A
timeA = c('WerlasS', 'ALL3Y', 'reazy', 'fred', 'CyderX')
timeA <- paste0('\\b', timeA, '\\b')
dados_gerais$timeA <- ifelse(grepl(paste(timeA, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
dados_gerais['nobody.1',]$timeA <- 0
# Time B
timeB = c('DeepMans', 'Masic', 'XiSTOU', 'skylen', 'cacan')
timeB <- paste0('\\b', timeB, '\\b')
dados_gerais$timeB <- ifelse(grepl(paste(timeB, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
timeA_df <- filter(dados_gerais, dados_gerais$timeA == 1)
timeA_df <- dplyr::select(timeA_df, R, ACS, K.D, KAST, ADR)
timeB_df <- filter(dados_gerais, dados_gerais$timeB == 1)
timeB_df <- dplyr::select(timeB_df, R, ACS, K.D, KAST, ADR)
# Médias
timeA_R <- mean(timeA_df$R)
timeA_ACS <- mean(timeA_df$ACS)
timeA_KAST <- mean(timeA_df$KAST)
timeA_KD <- mean(timeA_df$K.D)
timeA_ADR <- mean(timeA_df$ADR)
timeB_R <- mean(timeB_df$R)
timeB_ACS <- mean(timeB_df$ACS)
timeB_KAST <- mean(timeB_df$KAST)
timeB_KD <- mean(timeB_df$K.D)
timeB_ADR <- mean(timeB_df$ADR)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
partida <- dcast(partida, 1 ~ V1, fill = 0)
partida <- partida[,-1]
colnames(partida) <- c('timeA_R', 'timeB_R', 'timeA_ACS', 'timeB_ACS', 'timeA_KAST', 'timeB_KAST', 'timeA_KD', 'timeB_KD',
'timeA_ADR', 'timeB_ADR')
previsao <- compute(n, partida)
previsao$net.result
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(rjson)
# Carregando o modelo
load(file = "model_nnet.rda")
# Carregando o dataframe jogadores
dados_gerais <- read.csv2('csv/jogadores.csv')
# Arrumando as colunas
dados_gerais <- dplyr::select(dados_gerais, Player, R, ACS, K.D, KAST, ADR)
row.names(dados_gerais) <- make.names(dados_gerais[,1], unique = T)
dados_gerais <- dplyr::select(dados_gerais, -Player)
dados_gerais$KAST <- parse_number(dados_gerais$KAST)
# Time A
timeA = c('WerlasS', 'ALL3Y', 'reazy', 'fred', 'CyderX')
timeA <- paste0('\\b', timeA, '\\b')
dados_gerais$timeA <- ifelse(grepl(paste(timeA, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
dados_gerais['nobody.1',]$timeA <- 0
# Time B
timeB = c('DeepMans', 'Masic', 'XiSTOU', 'skylen', 'cacan')
timeB <- paste0('\\b', timeB, '\\b')
dados_gerais$timeB <- ifelse(grepl(paste(timeB, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
timeA_df <- filter(dados_gerais, dados_gerais$timeA == 1)
timeA_df <- dplyr::select(timeA_df, R, ACS, K.D, KAST, ADR)
timeB_df <- filter(dados_gerais, dados_gerais$timeB == 1)
timeB_df <- dplyr::select(timeB_df, R, ACS, K.D, KAST, ADR)
# Médias
timeA_R <- mean(timeA_df$R)
timeA_ACS <- mean(timeA_df$ACS)
timeA_KAST <- mean(timeA_df$KAST)
timeA_KD <- mean(timeA_df$K.D)
timeA_ADR <- mean(timeA_df$ADR)
View(timeA_df)
View(timeB_df)
# Carregando pacotes --------------------------------------------------------------------------------------
library(dplyr)
library(tidyr)
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(rjson)
# Carregando o modelo
load(file = "model_nnet.rda")
# Carregando o dataframe jogadores
dados_gerais <- read.csv2('csv/jogadores.csv')
# Arrumando as colunas
dados_gerais <- dplyr::select(dados_gerais, Player, R, ACS, K.D, KAST, ADR)
row.names(dados_gerais) <- make.names(dados_gerais[,1], unique = T)
dados_gerais <- dplyr::select(dados_gerais, -Player)
dados_gerais$KAST <- parse_number(dados_gerais$KAST)
# Carregando pacotes --------------------------------------------------------------------------------------
library(dplyr)
library(tidyr)
library(rvest)
library(quantmod)
library(httr)
library(tibble)
library(stringr)
library(neuralnet)
library(rjson)
# Carregando pacotes --------------------------------------------------------------------------------------
library(tidyverse)
# Carregando o modelo
load(file = "model_nnet.rda")
# Carregando o dataframe jogadores
dados_gerais <- read.csv2('csv/jogadores.csv')
# Arrumando as colunas
dados_gerais <- dplyr::select(dados_gerais, Player, R, ACS, K.D, KAST, ADR)
row.names(dados_gerais) <- make.names(dados_gerais[,1], unique = T)
dados_gerais <- dplyr::select(dados_gerais, -Player)
dados_gerais$KAST <- parse_number(dados_gerais$KAST)
# Time A
timeA = c('WerlasS', 'ALL3Y', 'reazy', 'fred', 'CyderX')
timeA <- paste0('\\b', timeA, '\\b')
dados_gerais$timeA <- ifelse(grepl(paste(timeA, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
dados_gerais['nobody.1',]$timeA <- 0
# Time B
timeB = c('DeepMans', 'Masic', 'XiSTOU', 'skylen', 'cacan')
timeB <- paste0('\\b', timeB, '\\b')
dados_gerais$timeB <- ifelse(grepl(paste(timeB, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
timeA_df <- filter(dados_gerais, dados_gerais$timeA == 1)
timeA_df <- dplyr::select(timeA_df, R, ACS, K.D, KAST, ADR)
timeB_df <- filter(dados_gerais, dados_gerais$timeB == 1)
timeB_df <- dplyr::select(timeB_df, R, ACS, K.D, KAST, ADR)
# Médias
timeA_R <- mean(timeA_df$R)
timeA_ACS <- mean(timeA_df$ACS)
timeA_KAST <- mean(timeA_df$KAST)
timeA_KD <- mean(timeA_df$K.D)
timeA_ADR <- mean(timeA_df$ADR)
timeB_R <- mean(timeB_df$R)
timeB_ACS <- mean(timeB_df$ACS)
timeB_KAST <- mean(timeB_df$KAST)
timeB_KD <- mean(timeB_df$K.D)
timeB_ADR <- mean(timeB_df$ADR)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
partida <- dcast(partida, 1 ~ V1, fill = 0)
partida <- partida[,-1]
colnames(partida) <- c('timeA_R', 'timeB_R', 'timeA_ACS', 'timeB_ACS', 'timeA_KAST', 'timeB_KAST', 'timeA_KD', 'timeB_KD',
'timeA_ADR', 'timeB_ADR')
previsao <- compute(n, partida)
previsao$net.result
result <- fromJSON(file = 'json/resultado.json')
?dcast
??dcast
library(reshape)
partida <- dcast(partida, 1 ~ V1, fill = 0)
library(reshape2)
partida <- dcast(partida, 1 ~ V1, fill = 0)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
partida <- dcast(partida, 1 ~ V1, fill = 0)
View(partida)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
View(partida)
partida <- dcast(partida, 1 ~ V1, fill = 0)
?dcast
partida <- dcast(partida, 1 ~ V1, fill = 0, fun.aggregate = V1)
partida <- dcast(partida, 1 ~ V1, fill = 0, fun.aggregate = NULL)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
partida <- dcast(partida, 1 ~ V1, fill = 0, fun.aggregate = NULL)
View(partida)
View(partida)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
View(partida)
partida <- dcast(partida, 1 ~ V1, fill = 0)
View(partida)
colnames(partida) <- c('timeA_R', 'timeB_R', 'timeA_ACS', 'timeB_ACS', 'timeA_KAST', 'timeB_KAST', 'timeA_KD', 'timeB_KD',
'timeA_ADR', 'timeB_ADR')
View(partida)
partida <- dcast(partida, timeA_R ~ timeB_ADR, fill = 0)
View(partida)
?lapply
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- as.data.frame(partida)
View(partida)
?as.data.frame
partida <- as.data.frame(partida, makes.names = T)
View(partida)
partida <- as.data.frame(partida)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD, timeA_ADR, timeB_ADR)
partida <- as.data.frame(c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD,
timeA_ADR, timeB_ADR))
View(partida)
partida <- scale(partida)
partida <-
partida <- as.data.frame(partida)
View(partida)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD,
timeA_ADR, timeB_ADR)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD,
timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- t(partida)
partida <- as.data.frame(partida)
View(partida)
colnames(partida) <- c('timeA_R', 'timeB_R', 'timeA_ACS', 'timeB_ACS', 'timeA_KAST', 'timeB_KAST', 'timeA_KD', 'timeB_KD',
'timeA_ADR', 'timeB_ADR')
View(partida)
previsao <- compute(n, partida)
previsao$net.result
View(n)
# Time A
timeA = c('JrayN', 'iXeonN', 'w0zzip', 'logicman', 'ruffian')
timeA <- paste0('\\b', timeA, '\\b')
dados_gerais$timeA <- ifelse(grepl(paste(timeA, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
dados_gerais['nobody.1',]$timeA <- 0
# Time B
timeB = c('tyzz', 'morti', 'Clory', 'Lewn', 'Xérox')
timeB <- paste0('\\b', timeB, '\\b')
dados_gerais$timeB <- ifelse(grepl(paste(timeB, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
timeA_df <- filter(dados_gerais, dados_gerais$timeA == 1)
timeA_df <- dplyr::select(timeA_df, R, ACS, K.D, KAST, ADR)
timeB_df <- filter(dados_gerais, dados_gerais$timeB == 1)
timeB_df <- dplyr::select(timeB_df, R, ACS, K.D, KAST, ADR)
# Médias
timeA_R <- mean(timeA_df$R)
timeA_ACS <- mean(timeA_df$ACS)
timeA_KAST <- mean(timeA_df$KAST)
timeA_KD <- mean(timeA_df$K.D)
View(timeB_df)
# Time A
timeA = c('Lakia', 'exy', 'allow', 'Esperanza', 'Estrella')
timeA <- paste0('\\b', timeA, '\\b')
dados_gerais$timeA <- ifelse(grepl(paste(timeA, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
dados_gerais['nobody.1',]$timeA <- 0
# Time B
timeB = c('margaret', 'Moves', 'dongho', 'pr0xy', 'Cloudy')
timeB <- paste0('\\b', timeB, '\\b')
dados_gerais$timeB <- ifelse(grepl(paste(timeB, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
timeA_df <- filter(dados_gerais, dados_gerais$timeA == 1)
timeA_df <- dplyr::select(timeA_df, R, ACS, K.D, KAST, ADR)
timeB_df <- filter(dados_gerais, dados_gerais$timeB == 1)
timeB_df <- dplyr::select(timeB_df, R, ACS, K.D, KAST, ADR)
# Médias
timeA_R <- mean(timeA_df$R)
timeA_ACS <- mean(timeA_df$ACS)
timeA_KAST <- mean(timeA_df$KAST)
timeA_KD <- mean(timeA_df$K.D)
timeA_ADR <- mean(timeA_df$ADR)
timeB_R <- mean(timeB_df$R)
timeB_ACS <- mean(timeB_df$ACS)
timeB_KAST <- mean(timeB_df$KAST)
timeB_KD <- mean(timeB_df$K.D)
timeB_ADR <- mean(timeB_df$ADR)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD,
timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- t(partida)
partida <- as.data.frame(partida)
partida <- dcast(partida, timeA_R ~ timeB_ADR, fill = 0)
colnames(partida) <- c('timeA_R', 'timeB_R', 'timeA_ACS', 'timeB_ACS', 'timeA_KAST', 'timeB_KAST', 'timeA_KD', 'timeB_KD',
'timeA_ADR', 'timeB_ADR')
previsao <- compute(n, partida)
# Time A
timeA = c('mada', 'v1c', 'dazzLe', 'bdog', 'moose')
timeA <- paste0('\\b', timeA, '\\b')
dados_gerais$timeA <- ifelse(grepl(paste(timeA, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
dados_gerais['nobody.1',]$timeA <- 0
# Time B
timeB = c('fletcher', 'd1msumboi', 'monSi', 'BlackHeart', 'khanartist')
timeB <- paste0('\\b', timeB, '\\b')
dados_gerais$timeB <- ifelse(grepl(paste(timeB, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
timeA_df <- filter(dados_gerais, dados_gerais$timeA == 1)
timeA_df <- dplyr::select(timeA_df, R, ACS, K.D, KAST, ADR)
timeB_df <- filter(dados_gerais, dados_gerais$timeB == 1)
timeB_df <- dplyr::select(timeB_df, R, ACS, K.D, KAST, ADR)
# Médias
timeA_R <- mean(timeA_df$R)
timeA_ACS <- mean(timeA_df$ACS)
timeA_KAST <- mean(timeA_df$KAST)
timeA_KD <- mean(timeA_df$K.D)
timeA_ADR <- mean(timeA_df$ADR)
timeB_R <- mean(timeB_df$R)
timeB_ACS <- mean(timeB_df$ACS)
timeB_KAST <- mean(timeB_df$KAST)
timeB_KD <- mean(timeB_df$K.D)
timeB_ADR <- mean(timeB_df$ADR)
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD,
timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- t(partida)
partida <- as.data.frame(partida)
partida <- dcast(partida, timeA_R ~ timeB_ADR, fill = 0)
colnames(partida) <- c('timeA_R', 'timeB_R', 'timeA_ACS', 'timeB_ACS', 'timeA_KAST', 'timeB_KAST', 'timeA_KD', 'timeB_KD',
'timeA_ADR', 'timeB_ADR')
partida <- c(timeA_R, timeB_R, timeA_ACS, timeB_ACS, timeA_KAST, timeB_KAST, timeA_KD, timeB_KD,
timeA_ADR, timeB_ADR)
partida <- scale(partida)
partida <- t(partida)
partida <- as.data.frame(partida)
View(partida)
colnames(partida) <- c('timeA_R', 'timeB_R', 'timeA_ACS', 'timeB_ACS', 'timeA_KAST', 'timeB_KAST', 'timeA_KD', 'timeB_KD',
'timeA_ADR', 'timeB_ADR')
previsao <- compute(n, partida)
previsao$net.result
source("~/TCC Pós/Scripts/02_jogos.R")
