# Exportando o arquivo ------------------------------------------------------------------------------------
write.csv(ds_adversarios_c9, file = "C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_gc/ds_adversarios_c9.csv")
# Carregando pacotes ---------------------------------------------------------------------------------------
library(tidyverse)
library(FactoMineR)
library(factoextra)
library(cluster)
library(xlsx)
library(ineq)
library(stringr)
library(dplyr)
# Carregando a base de dados de jogadores ---------------------------------------------------------------
dados_gerais <- read.csv2('dados_gerais.csv')
# Arrumando as colunas ----------------------------------------------------------------------------------
dados_gerais <- select(dados_gerais, -X, -Team)
row.names(dados_gerais) <- make.names(dados_gerais[,1], unique = T)
dados_gerais <- select(dados_gerais, -Player)
# Definindo times especificos ---------------------------------------------------------------------------
#Cloud9 White
c9w = c('Bob', 'meL', 'Jazzyk1ns', 'alexis', 'katsumi') # Definindo o time 1
c9w <- paste0('\\b', c9w, '\\b') # Colocando '\\b' antes e dps p pegar apenas as strings exatas
dados_gerais$c9w <- ifelse(grepl(paste(c9w, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#Shopify Rebellion GC
sr = c('KP', 'bENITA', 'flowerful', 'sonder', 'Lorri')
sr <- paste0('\\b', sr, '\\b')
dados_gerais$sr <- ifelse(grepl(paste(sr, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#Guild X
gldx = c('aNNja', 'cinnamon', 'Smurfette', 'roxi', 'ness')
gldx <- paste0('\\b', gldx, '\\b')
dados_gerais$gldx <- ifelse(grepl(paste(gldx, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#G2 Gozen
g2 = c('Glance', 'Petra', 'mimi', 'juliano', 'Mary')
g2 <- paste0('\\b', g2, '\\b')
dados_gerais$g2 <- ifelse(grepl(paste(g2, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#Team Liquid Brazil
tl = c('drn', 'naxy', 'bstrdd', 'daiki', 'nat1')
tl <- paste0('\\b', tl, '\\b')
dados_gerais$tl <- ifelse(grepl(paste(tl, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#KRÜ Fem
kru = c('consu', 'baesht', 'conir', 'kalita', 'romi')
kru <- paste0('\\b', kru, '\\b')
dados_gerais$kru <- ifelse(grepl(paste(kru, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#X10 Sapphire
x10 = c('JinNy', 'Muffyn', 'Babytz', 'Poly', 'alyssa')
x10 <- paste0('\\b', x10, '\\b')
dados_gerais$x10 <- ifelse(grepl(paste(x10, collapse = '|'), rownames(dados_gerais), useBytes = T), 1 ,0)
#FENNEL GC
flgc = c('suzu', 'KOHAL', 'Festival', 'Len', 'Curumi')
flgc <- paste0('\\b', flgc, '\\b')
dados_gerais$flgc <- ifelse(grepl(paste(flgc, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
resultado <- filter(dados_gerais, dados_gerais$c9w == 1 | dados_gerais$sr == 1 | dados_gerais$gldx == 1
| dados_gerais$g2 == 1 | dados_gerais$tl == 1 | dados_gerais$kru == 1 |
dados_gerais$x10 == 1 | dados_gerais$flgc == 1)
# Removendo uma jogadora que tem o mesmo de outra
while (nrow(resultado) > 40) {
resultado <- resultado[-41,]
}
# Calculando IDC (variancia de KAST entre os jogadores de cada time)
c9w_df <- filter(resultado, resultado$c9w == 1)
sr_df <- filter(resultado, resultado$sr == 1)
gldx_df <- filter(resultado, resultado$gldx == 1)
g2_df <- filter(resultado, resultado$g2 == 1)
tl_df <- filter(resultado, resultado$tl == 1)
kru_df <- filter(resultado, resultado$kru == 1)
x10_df <- filter(resultado, resultado$x10 == 1)
flgc_df <- filter(resultado, resultado$flgc == 1)
idc_t1 <- ineq(c9w_df$KAST, type = 'Gini')
idc_t2 <- ineq(sr_df$KAST, type = 'Gini')
idc_t3 <- ineq(gldx_df$KAST, type = 'Gini')
idc_t4 <- ineq(g2_df$KAST, type = 'Gini')
idc_t5 <- ineq(tl_df$KAST, type = 'Gini')
idc_t6 <- ineq(kru_df$KAST, type = 'Gini')
idc_t7 <- ineq(x10_df$KAST, type = 'Gini')
idc_t8 <- ineq(flgc_df$KAST, type = 'Gini')
# Colocando o indice de Gini em cada jogador para seu respectivo time
c9w_df$idc <- idc_t1
sr_df$idc <- idc_t2
gldx_df$idc <- idc_t3
g2_df$idc <- idc_t4
tl_df$idc <- idc_t5
kru_df$idc <- idc_t6
x10_df$idc <- idc_t7
flgc_df$idc <- idc_t8
# Removendo as variaveis idc_tn e times
rm(idc_t1, idc_t2, idc_t3, idc_t4, idc_t5, idc_t6, idc_t7, idc_t8)
rm(c9w, sr, gldx, g2, tl, kru, x10, flgc)
# Colocando os indices de gini no dataframe 'resultado'
resultado <- cbind(c9w_df, sr_df, gldx_df, g2_df, tl_df, kru_df, x10_df, flgc_df)
resultado <- merge(c9w_df, sr_df, all = T) %>%
merge(gldx_df, all = T) %>%
merge(g2_df, all = T) %>%
merge(tl_df, all = T) %>%
merge(kru_df, all = T) %>%
merge(x10_df, all = T) %>%
merge(flgc_df, all = T)
# Tirando colunas de times dos dataframes especificos de cada time
c9w_df <- c9w_df[,-7:-14]
flgc_df <- flgc_df[,-7:-14]
g2_df <- g2_df[,-7:-14]
gldx_df <- gldx_df[,-7:-14]
kru_df <- kru_df[,-7:-14]
sr_df <- sr_df[,-7:-14]
tl_df <- tl_df[,-7:-14]
x10_df <- x10_df[,-7:-14]
# Carregando pacotes ---------------------------------------------------------------------------------------
library(tidyverse)
library(FactoMineR)
library(factoextra)
library(cluster)
library(xlsx)
library(ineq)
library(stringr)
library(dplyr)
# Carregando a base de dados de jogadores ---------------------------------------------------------------
dados_gerais <- read.csv2('dados_gerais.csv')
# Arrumando as colunas ----------------------------------------------------------------------------------
dados_gerais <- dados_gerais[,-1]
dados_gerais <- dados_gerais[,-2]
row.names(dados_gerais) <- make.names(dados_gerais[,1], unique = T)
dados_gerais <- dados_gerais[,-1]
# Definindo times especificos ---------------------------------------------------------------------------
#Loud
loud = c('Sacy', 'pancada', 'saadhak', 'Less', 'aspas') # Definindo o time 1
loud <- paste0('\\b', loud, '\\b') # Colocando '\\b' antes e dps p pegar apenas as strings exatas
dados_gerais$loud <- ifelse(grepl(paste(loud, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#OpTic Gaming
op = c('crashies', 'Victor', 'Marved', 'FNS', 'yay')
op <- paste0('\\b', op, '\\b')
dados_gerais$op <- ifelse(grepl(paste(op, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#DRX
drx = c('stax', 'Rb', 'Zest', 'BuZz', 'MaKo')
drx <- paste0('\\b', drx, '\\b')
dados_gerais$drx <- ifelse(grepl(paste(drx, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#XSET
xset = c('AYRIN', 'BcJ', 'dephh', 'zekken', 'Cryocells')
xset <- paste0('\\b', xset, '\\b')
dados_gerais$xset <- ifelse(grepl(paste(xset, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#TL
tl = c('ScreaM', 'soulcas', 'dimasick', 'Jamppi', 'Nivera')
tl <- paste0('\\b', tl, '\\b')
dados_gerais$tl <- ifelse(grepl(paste(tl, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#Leviatan
lev = c('Melser', 'adverso', 'Tacolilla', 'kiNgg', 'Shyy')
lev <- paste0('\\b', lev, '\\b')
dados_gerais$lev <- ifelse(grepl(paste(lev, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#FunPlus Phoenix
fpx = c('Zyppan', 'ardiis', 'ANGE1', 'Shao', 'SUYGETSU')
fpx <- paste0('\\b', fpx, '\\b')
dados_gerais$fpx <- ifelse(grepl(paste(fpx, collapse = '|'), rownames(dados_gerais), useBytes = T), 1 ,0)
#FNATIC
fntc = c('Enzo', 'Boaster', 'Mistic', 'Derke', 'Alfajer')
fntc <- paste0('\\b', fntc, '\\b')
dados_gerais$fntc <- ifelse(grepl(paste(fntc, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
resultado <- filter(dados_gerais, dados_gerais$loud == 1 | dados_gerais$op == 1 | dados_gerais$drx == 1
| dados_gerais$xset == 1 | dados_gerais$tl == 1 | dados_gerais$lev == 1 |
dados_gerais$fpx == 1 | dados_gerais$fntc == 1)
# Removendo uma jogadora que tem o mesmo de outra
resultado <- resultado[-41,]
# Calculando IDC (variancia de KAST entre os jogadores de cada time)
loud_df <- filter(resultado, resultado$loud == 1)
op_df <- filter(resultado, resultado$op == 1)
drx_df <- filter(resultado, resultado$drx == 1)
xset_df <- filter(resultado, resultado$xset == 1)
tl_df <- filter(resultado, resultado$tl == 1)
lev_df <- filter(resultado, resultado$lev == 1)
fpx_df <- filter(resultado, resultado$fpx == 1)
fntc_df <- filter(resultado, resultado$fntc == 1)
idc_t1 <- ineq(loud_df$KAST, type = 'Gini')
idc_t2 <- ineq(op_df$KAST, type = 'Gini')
idc_t3 <- ineq(drx_df$KAST, type = 'Gini')
idc_t4 <- ineq(xset_df$KAST, type = 'Gini')
idc_t5 <- ineq(tl_df$KAST, type = 'Gini')
idc_t6 <- ineq(lev_df$KAST, type = 'Gini')
idc_t7 <- ineq(fpx_df$KAST, type = 'Gini')
idc_t8 <- ineq(fntc_df$KAST, type = 'Gini')
# Colocando o indice de Gini em cada jogador para seu respectivo time
loud_df$idc <- idc_t1
op_df$idc <- idc_t2
drx_df$idc <- idc_t3
xset_df$idc <- idc_t4
tl_df$idc <- idc_t5
lev_df$idc <- idc_t6
fpx_df$idc <- idc_t7
fntc_df$idc <- idc_t8
# Removendo as variaveis idc_tn e times
rm(idc_t1, idc_t2, idc_t3, idc_t4, idc_t5, idc_t6, idc_t7, idc_t8)
rm(loud, op, drx, xset, tl, lev, fpx, fntc)
# Colocando os indices de gini no dataframe 'resultado'
resultado <- cbind(loud_df, op_df, drx_df, xset_df, tl_df, lev_df, fpx_df, fntc_df)
resultado <- merge(loud_df, op_df, all = T) %>%
merge(drx_df, all = T) %>%
merge(xset_df, all = T) %>%
merge(tl_df, all = T) %>%
merge(lev_df, all = T) %>%
merge(fpx_df, all = T) %>%
merge(fntc_df, all = T)
# Tirando colunas de times dos dataframes especificos de cada time
loud_df <- loud_df[,-7:-14]
fntc_df <- fntc_df[,-7:-14]
xset_df <- xset_df[,-7:-14]
drx_df <- drx_df[,-7:-14]
lev_df <- lev_df[,-7:-14]
op_df <- op_df[,-7:-14]
tl_df <- tl_df[,-7:-14]
fpx_df <- fpx_df[,-7:-14]
# Tentando mesclar dataframe ds_adversarios com outras estatisticas ------------------------------------------------
# Tentando mesclar dataframe ds_adversarios com outras estatisticas ------------------------------------------------
ds_adversarios_loud <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_champions/ds_adversarios_loud.csv",
sep = ',') %>% select(-X)
ds_adversarios_drx <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_champions/ds_adversarios_drx.csv",
sep = ',') %>% select(-X)
ds_adversarios_fpx <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_champions/ds_adversarios_fpx.csv",
sep = ',') %>% select(-X)
ds_adversarios_fntc <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_champions/ds_adversarios_fntc.csv",
sep = ',') %>% select(-X)
ds_adversarios_tl <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_champions/ds_adversarios_tl.csv",
sep = ',') %>% select(-X)
ds_adversarios_op <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_champions/ds_adversarios_op.csv",
sep = ',') %>% select(-X)
ds_adversarios_xset <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_champions/ds_adversarios_xset.csv",
sep = ',') %>% select(-X)
ds_adversarios_lev <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_champions/ds_adversarios_lev.csv",
sep = ',') %>% select(-X)
# Ao fim de cada formula abaixo eu desconsiderei (subtraindo) o número de rounds ganhos ou perdidos nesse campeonato
#Loud
loud_lev <- sum(ds_adversarios_loud$Adversario == 'Leviatán' & ds_adversarios_loud$Resultados == 'Win') -
sum(ds_adversarios_loud$Adversario == 'Leviatán' & ds_adversarios_loud$Resultados == 'Lose') - 2
loud_op <- sum(ds_adversarios_loud$Adversario == 'OpTic Gaming' & ds_adversarios_loud$Resultados == 'Win') -
sum(ds_adversarios_loud$Adversario == 'OpTic Gaming' & ds_adversarios_loud$Resultados == 'Lose') - 4
#Drx
drx_fpx <- sum(ds_adversarios_drx$Adversario == 'FunPlus Phoenix' & ds_adversarios_drx$Resultados == 'Win') -
sum(ds_adversarios_drx$Adversario == 'FunPlus Phoenix' & ds_adversarios_drx$Resultados == 'Lose') - 4
drx_loud <- sum(ds_adversarios_drx$Adversario == 'LOUD' & ds_adversarios_drx$Resultados == 'Win') -
sum(ds_adversarios_drx$Adversario == 'LOUD' & ds_adversarios_drx$Resultados == 'Lose') + 2
drx_fntc <- sum(ds_adversarios_drx$Adversario == 'FNATIC' & ds_adversarios_drx$Resultados == 'Win') -
sum(ds_adversarios_drx$Adversario == 'FNATIC' & ds_adversarios_drx$Resultados == 'Lose') - 1
drx_op <- sum(ds_adversarios_drx$Adversario == 'OpTic Gaming' & ds_adversarios_drx$Resultados == 'Win') -
sum(ds_adversarios_drx$Adversario == 'OpTic Gaming' & ds_adversarios_drx$Resultados == 'Lose') + 1
#OpTic
op_tl <- sum(ds_adversarios_op$Adversario == 'Team Liquid' & ds_adversarios_op$Resultados == 'Win') -
sum(ds_adversarios_op$Adversario == 'Team Liquid' & ds_adversarios_op$Resultados == 'Lose') - 1
#Xset
xset_fntc <- sum(ds_adversarios_xset$Adversario == 'FNATIC' & ds_adversarios_xset$Resultados == 'Win') -
sum(ds_adversarios_xset$Adversario == 'FNATIC' & ds_adversarios_xset$Resultados == 'Lose') - 2
xset_fpx <- sum(ds_adversarios_xset$Adversario == 'FunPlus Phoenix' & ds_adversarios_xset$Resultados == 'Win') -
sum(ds_adversarios_xset$Adversario == 'FunPlus Phoenix' & ds_adversarios_xset$Resultados == 'Lose') + 1
xset_op <- sum(ds_adversarios_xset$Adversario == 'OpTic Gaming' & ds_adversarios_xset$Resultados == 'Win') -
sum(ds_adversarios_xset$Adversario == 'OpTic Gaming' & ds_adversarios_xset$Resultados == 'Lose') + 1
#Fpx
fpx_lev <- sum(ds_adversarios_fpx$Adversario == 'Leviatán' & ds_adversarios_fpx$Resultados == 'Win') -
sum(ds_adversarios_fpx$Adversario == 'Leviatán' & ds_adversarios_fpx$Resultados == 'Lose') - 2
#Team Liquid
tl_fntc <- sum(ds_adversarios_tl$Adversario == 'FNATIC' & ds_adversarios_tl$Resultados == 'Win') -
sum(ds_adversarios_tl$Adversario == 'FNATIC' & ds_adversarios_tl$Resultados == 'Lose') + 2
# Tentando uma formula para dizer a porcentagem de chance de vitória do time 1 sobre o time 2 ----------------------
jogo1 <- (mean(drx_df$R) + drx_fpx * 0.01) / ((mean(drx_df$R) + drx_fpx * 0.01) +
(mean(fpx_df$R) + (-drx_fpx * 0.01)))
jogo2 <- (mean(lev_df$R) + -loud_lev * 0.01) / ((mean(lev_df$R) + -loud_lev * 0.01) +
mean(loud_df$R) + (loud_lev * 0.01))
jogo3 <- (mean(op_df$R) + op_tl * 0.01) / ((mean(op_df$R) + op_tl * 0.01) +
mean(tl_df$R) + -op_tl * 0.01)
jogo4 <- (mean(xset_df$R) + xset_fntc * 0.01) / ((mean(xset_df$R) + xset_fntc * 0.01) +
mean(fntc_df$R) + -xset_fntc * 0.01)
jogo5 <- (mean(fpx_df$R) + fpx_lev * 0.01) / ((mean(fpx_df$R) + fpx_lev * 0.01) +
mean(lev_df$R) + -fpx_lev * 0.01)
jogo6 <- (mean(tl_df$R) + tl_fntc * 0.01) / ((mean(tl_df$R) + tl_fntc * 0.01) +
mean(fntc_df$R) + -tl_fntc * 0.01)
jogo7 <- (mean(drx_df$R) + drx_loud * 0.01) / ((mean(drx_df$R) + drx_loud * 0.01) +
mean(loud_df$R) + -drx_loud * 0.01)
jogo8 <- (mean(op_df$R) + -xset_op * 0.01) / ((mean(op_df$R) + -xset_op * 0.01) +
mean(xset_df$R) + xset_op * 0.01)
jogo9 <- (mean(xset_df$R) + xset_fpx * 0.01) / ((mean(xset_df$R) + xset_fpx * 0.01) +
mean(fpx_df$R) + -xset_fpx * 0.01)
jogo10 <- (mean(drx_df$R) + drx_fntc * 0.01) / ((mean(drx_df$R) + drx_fntc * 0.01) +
mean(fntc_df$R) + -drx_fntc * 0.01)
jogo11 <- (mean(loud_df$R) + loud_op * 0.01) / ((mean(loud_df$R) + loud_op * 0.01) +
mean(op_df$R) + -loud_op * 0.01)
jogo12 <- (mean(fpx_df$R) + -drx_fpx * 0.01) / ((mean(fpx_df$R) + -drx_fpx * 0.01) +
mean(drx_df$R) + drx_fpx * 0.01)
jogo13 <- (mean(loud_df$R) + loud_op * 0.01) / ((mean(loud_df$R) + loud_op * 0.01) +
mean(op_df$R) + -loud_op * 0.01)
jogo14 <- (mean(op_df$R) + -drx_op * 0.01) / ((mean(op_df$R) + -drx_op * 0.01) +
mean(drx_df$R) + drx_op * 0.01)
acertos = 0
analisa_resultados = function(jogo1, jogo2, jogo3, jogo4, jogo5, jogo6, jogo7, jogo8, jogo9, jogo10, jogo11, jogo12,
jogo13, jogo14){
if(jogo1 > 0.50){
acertos = acertos + 1
}
if(jogo2 < 0.50){
acertos = acertos + 1
}
if(jogo3 > 0.50){
acertos = acertos + 1
}
if(jogo4 > 0.50){
acertos = acertos + 1
}
if(jogo5 > 0.50){
acertos = acertos + 1
}
if(jogo6 < 0.50){
acertos = acertos + 1
}
if(jogo7 < 0.50){
acertos = acertos + 1
}
if(jogo8 > 0.50){
acertos = acertos + 1
}
if(jogo9 < 0.50){
acertos = acertos + 1
}
if(jogo10 > 0.50){
acertos = acertos + 1
}
if(jogo11 > 0.50){
acertos = acertos + 1
}
if(jogo12 < 0.50){
acertos = acertos + 1
}
if(jogo13 > 0.50){
acertos = acertos + 1
}
if(jogo14 > 0.50){
acertos = acertos + 1
}
return(acertos/14)
}
analisa_resultados(jogo1, jogo2, jogo3, jogo4, jogo5, jogo6, jogo7, jogo8, jogo9, jogo10, jogo11,
jogo12, jogo13, jogo14)
# Carregando pacotes ---------------------------------------------------------------------------------------
library(tidyverse)
library(FactoMineR)
library(factoextra)
library(cluster)
library(xlsx)
library(ineq)
library(stringr)
library(dplyr)
# Carregando a base de dados de jogadores ---------------------------------------------------------------
dados_gerais <- read.csv2('dados_gerais.csv')
# Arrumando as colunas ----------------------------------------------------------------------------------
dados_gerais <- select(dados_gerais, -X, -Team)
row.names(dados_gerais) <- make.names(dados_gerais[,1], unique = T)
dados_gerais <- select(dados_gerais, -Player)
# Definindo times especificos ---------------------------------------------------------------------------
#Cloud9 White
c9w = c('Bob', 'meL', 'Jazzyk1ns', 'alexis', 'katsumi') # Definindo o time 1
c9w <- paste0('\\b', c9w, '\\b') # Colocando '\\b' antes e dps p pegar apenas as strings exatas
dados_gerais$c9w <- ifelse(grepl(paste(c9w, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#Shopify Rebellion GC
sr = c('KP', 'bENITA', 'flowerful', 'sonder', 'Lorri')
sr <- paste0('\\b', sr, '\\b')
dados_gerais$sr <- ifelse(grepl(paste(sr, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#Guild X
gldx = c('aNNja', 'cinnamon', 'Smurfette', 'roxi', 'ness')
gldx <- paste0('\\b', gldx, '\\b')
dados_gerais$gldx <- ifelse(grepl(paste(gldx, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#G2 Gozen
g2 = c('Glance', 'Petra', 'mimi', 'juliano', 'Mary')
g2 <- paste0('\\b', g2, '\\b')
dados_gerais$g2 <- ifelse(grepl(paste(g2, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#Team Liquid Brazil
tl = c('drn', 'naxy', 'bstrdd', 'daiki', 'nat1')
tl <- paste0('\\b', tl, '\\b')
dados_gerais$tl <- ifelse(grepl(paste(tl, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#KRÜ Fem
kru = c('consu', 'baesht', 'conir', 'kalita', 'romi')
kru <- paste0('\\b', kru, '\\b')
dados_gerais$kru <- ifelse(grepl(paste(kru, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
#X10 Sapphire
x10 = c('JinNy', 'Muffyn', 'Babytz', 'Poly', 'alyssa')
x10 <- paste0('\\b', x10, '\\b')
dados_gerais$x10 <- ifelse(grepl(paste(x10, collapse = '|'), rownames(dados_gerais), useBytes = T), 1 ,0)
#FENNEL GC
flgc = c('suzu', 'KOHAL', 'Festival', 'Len', 'Curumi')
flgc <- paste0('\\b', flgc, '\\b')
dados_gerais$flgc <- ifelse(grepl(paste(flgc, collapse = '|'), rownames(dados_gerais), useBytes = T), 1, 0)
resultado <- filter(dados_gerais, dados_gerais$c9w == 1 | dados_gerais$sr == 1 | dados_gerais$gldx == 1
| dados_gerais$g2 == 1 | dados_gerais$tl == 1 | dados_gerais$kru == 1 |
dados_gerais$x10 == 1 | dados_gerais$flgc == 1)
# Removendo uma jogadora que tem o mesmo de outra
while (nrow(resultado) > 40) {
resultado <- resultado[-41,]
}
# Calculando IDC (variancia de KAST entre os jogadores de cada time)
c9w_df <- filter(resultado, resultado$c9w == 1)
sr_df <- filter(resultado, resultado$sr == 1)
gldx_df <- filter(resultado, resultado$gldx == 1)
g2_df <- filter(resultado, resultado$g2 == 1)
tl_df <- filter(resultado, resultado$tl == 1)
kru_df <- filter(resultado, resultado$kru == 1)
x10_df <- filter(resultado, resultado$x10 == 1)
flgc_df <- filter(resultado, resultado$flgc == 1)
idc_t1 <- ineq(c9w_df$KAST, type = 'Gini')
idc_t2 <- ineq(sr_df$KAST, type = 'Gini')
idc_t3 <- ineq(gldx_df$KAST, type = 'Gini')
idc_t4 <- ineq(g2_df$KAST, type = 'Gini')
idc_t5 <- ineq(tl_df$KAST, type = 'Gini')
idc_t6 <- ineq(kru_df$KAST, type = 'Gini')
idc_t7 <- ineq(x10_df$KAST, type = 'Gini')
idc_t8 <- ineq(flgc_df$KAST, type = 'Gini')
# Colocando o indice de Gini em cada jogador para seu respectivo time
c9w_df$idc <- idc_t1
sr_df$idc <- idc_t2
gldx_df$idc <- idc_t3
g2_df$idc <- idc_t4
tl_df$idc <- idc_t5
kru_df$idc <- idc_t6
x10_df$idc <- idc_t7
flgc_df$idc <- idc_t8
# Removendo as variaveis idc_tn e times
rm(idc_t1, idc_t2, idc_t3, idc_t4, idc_t5, idc_t6, idc_t7, idc_t8)
rm(c9w, sr, gldx, g2, tl, kru, x10, flgc)
# Colocando os indices de gini no dataframe 'resultado'
resultado <- cbind(c9w_df, sr_df, gldx_df, g2_df, tl_df, kru_df, x10_df, flgc_df)
resultado <- merge(c9w_df, sr_df, all = T) %>%
merge(gldx_df, all = T) %>%
merge(g2_df, all = T) %>%
merge(tl_df, all = T) %>%
merge(kru_df, all = T) %>%
merge(x10_df, all = T) %>%
merge(flgc_df, all = T)
# Tirando colunas de times dos dataframes especificos de cada time
c9w_df <- c9w_df[,-7:-14]
flgc_df <- flgc_df[,-7:-14]
g2_df <- g2_df[,-7:-14]
gldx_df <- gldx_df[,-7:-14]
kru_df <- kru_df[,-7:-14]
sr_df <- sr_df[,-7:-14]
tl_df <- tl_df[,-7:-14]
x10_df <- x10_df[,-7:-14]
# Tentando mesclar dataframe ds_adversarios com outras estatisticas ------------------------------------------------
ds_adversarios_g2 <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_gc/ds_adversarios_g2.csv",
sep = ',') %>% select(-X)
ds_adversarios_sr <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_gc/ds_adversarios_sr.csv",
sep = ',') %>% select(-X)
ds_adversarios_c9 <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_gc/ds_adversarios_c9.csv",
sep = ',') %>% select(-X)
ds_adversarios_x10 <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_gc/ds_adversarios_x10.csv",
sep = ',') %>% select(-X)
ds_adversarios_tl <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_gc/ds_adversarios_tl.csv",
sep = ',') %>% select(-X)
ds_adversarios_kru <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_gc/ds_adversarios_kru.csv",
sep = ',') %>% select(-X)
ds_adversarios_gldx <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_gc/ds_adversarios_gldx.csv",
sep = ',') %>% select(-X)
ds_adversarios_flgc <- read.csv("C:/Users/anonb/Documents/TCC Pós/Scripts/scripts_times_gc/ds_adversarios_flgc.csv",
sep = ',') %>% select(-X)
View(ds_adversarios_g2)
View(ds_adversarios_sr)
View(ds_adversarios_gldx)
# Ao fim de cada formula abaixo eu desconsiderei (subtraindo) o número de rounds ganhos ou perdidos nesse campeonato
#g2
g2_x10 <- sum(ds_adversarios_g2$Adversario == 'X10 Sapphire' & ds_adversarios_g2$Resultados == 'Win') -
sum(ds_adversarios_g2$Adversario == 'X10 Sapphire' & ds_adversarios_g2$Resultados == 'Lose') - 2
g2_c9 <- sum(ds_adversarios_g2$Adversario == 'Cloud9 White' & ds_adversarios_g2$Resultados == 'Win') -
sum(ds_adversarios_g2$Adversario == 'Cloud9 White' & ds_adversarios_g2$Resultados == 'Lose') - 1
#sr
sr_gldx <- sum(ds_adversarios_sr$Adversario == 'Guild X' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'Guild X' & ds_adversarios_sr$Resultados == 'Lose') - 1
sr_tl <- sum(ds_adversarios_sr$Adversario == 'Team Liquid Brazil' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'Team Liquid Brazil' & ds_adversarios_sr$Resultados == 'Lose') - 1
sr_x10 <- sum(ds_adversarios_sr$Adversario == 'X10 Sapphire' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'X10 Sapphire' & ds_adversarios_sr$Resultados == 'Lose') - 2
sr_c9 <- sum(ds_adversarios_sr$Adversario == 'Cloud9 White' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'Cloud9 White' & ds_adversarios_sr$Resultados == 'Lose') - 1
sr_g2 <- sum(ds_adversarios_sr$Adversario == 'G2 Gozen' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'G2 Gozen' & ds_adversarios_sr == 'Lose') + 1
#kru
kru_c9 <- sum(ds_adversarios_kru$Adversario == 'Cloud9 White' & ds_adversarios_kru$Resultados == 'Win') -
sum(ds_adversarios_kru$Adversario == 'Cloud9 White' & ds_adversarios_kru$Resultados == 'Lose') - 1
#gldx
gldx_flgc <- sum(ds_adversarios_gldx$Adversario == 'FENNEL GC' & ds_adversarios_gldx$Resultados == 'Win') -
sum(ds_adversarios_gldx$Adversario == 'FENNEL GC' & ds_adversarios_gldx$Resultados == 'Lose') - 2
gldx_c9 <- sum(ds_adversarios_gldx$Adversario == 'Cloud9 White' & ds_adversarios_gldx$Resultados == 'Win') -
sum(ds_adversarios_gldx$Adversario == 'Cloud9 White' & ds_adversarios_gldx$Resultados == 'Lose') + 1
#Team Liquid
tl_g2 <- sum(ds_adversarios_tl$Adversario == 'G2 Gozen' & ds_adversarios_tl$Resultados == 'Win') -
sum(ds_adversarios_tl$Adversario == 'G2 Gozen' & ds_adversarios_tl$Resultados == 'Lose') + 2
# Ao fim de cada formula abaixo eu desconsiderei (subtraindo) o número de rounds ganhos ou perdidos nesse campeonato
#g2
g2_x10 <- sum(ds_adversarios_g2$Adversario == 'X10 Sapphire' & ds_adversarios_g2$Resultados == 'Win') -
sum(ds_adversarios_g2$Adversario == 'X10 Sapphire' & ds_adversarios_g2$Resultados == 'Lose') - 2
g2_c9 <- sum(ds_adversarios_g2$Adversario == 'Cloud9 White' & ds_adversarios_g2$Resultados == 'Win') -
sum(ds_adversarios_g2$Adversario == 'Cloud9 White' & ds_adversarios_g2$Resultados == 'Lose') - 1
#sr
sr_gldx <- sum(ds_adversarios_sr$Adversario == 'Guild X' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'Guild X' & ds_adversarios_sr$Resultados == 'Lose') - 1
sr_tl <- sum(ds_adversarios_sr$Adversario == 'Team Liquid Brazil' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'Team Liquid Brazil' & ds_adversarios_sr$Resultados == 'Lose') - 1
sr_x10 <- sum(ds_adversarios_sr$Adversario == 'X10 Sapphire' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'X10 Sapphire' & ds_adversarios_sr$Resultados == 'Lose') - 2
sr_c9 <- sum(ds_adversarios_sr$Adversario == 'Cloud9 White' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'Cloud9 White' & ds_adversarios_sr$Resultados == 'Lose') - 1
sr_g2 <- sum(ds_adversarios_sr$Adversario == 'G2 Gozen' & ds_adversarios_sr$Resultados == 'Win') -
sum(ds_adversarios_sr$Adversario == 'G2 Gozen' & ds_adversarios_sr == 'Lose') + 1
#kru
kru_c9 <- sum(ds_adversarios_kru$Adversario == 'Cloud9 White' & ds_adversarios_kru$Resultados == 'Win') -
sum(ds_adversarios_kru$Adversario == 'Cloud9 White' & ds_adversarios_kru$Resultados == 'Lose') + 2
#gldx
gldx_flgc <- sum(ds_adversarios_gldx$Adversario == 'FENNEL GC' & ds_adversarios_gldx$Resultados == 'Win') -
sum(ds_adversarios_gldx$Adversario == 'FENNEL GC' & ds_adversarios_gldx$Resultados == 'Lose') - 2
gldx_c9 <- sum(ds_adversarios_gldx$Adversario == 'Cloud9 White' & ds_adversarios_gldx$Resultados == 'Win') -
sum(ds_adversarios_gldx$Adversario == 'Cloud9 White' & ds_adversarios_gldx$Resultados == 'Lose') + 2
#Team Liquid
tl_g2 <- sum(ds_adversarios_tl$Adversario == 'G2 Gozen' & ds_adversarios_tl$Resultados == 'Win') -
sum(ds_adversarios_tl$Adversario == 'G2 Gozen' & ds_adversarios_tl$Resultados == 'Lose') + 2
View(ds_adversarios_sr)
-18 * 0.01
