nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(7,7),
err.fct = "sse",
linear.output = T,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(5,5),
err.fct = "sse",
linear.output = T,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(5,5),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(6),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(6,6),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(6,6),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(6,6,6),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(5,5,5),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(7,7),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(7,7,7),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(7,7,7),
err.fct = "sse",
linear.output = T,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10,10,10),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10),
err.fct = "sse",
linear.output = F,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10),
err.fct = "sse",
linear.output = F,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10),
err.fct = "sse",
linear.output = F,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10,10),
err.fct = "sse",
linear.output = F,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10),
err.fct = "sse",
linear.output = F,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(5),
err.fct = "sse",
linear.output = F,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(7),
err.fct = "sse",
linear.output = F,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(7,7,7),
err.fct = "sse",
linear.output = F,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(9,9),
err.fct = "sse",
linear.output = F,
threshold = 0.001,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(9,9),
err.fct = "sse",
linear.output = F,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(8,8,8),
err.fct = "sse",
linear.output = F,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(8,8,8),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10,10),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
# Modelando a rede neural ---------------------------------------------------------------------------------
n <- neuralnet(ganhador ~ time1R + time2R + time1ACS + time2ACS +time1KAST + time2KAST + time1KD + time2KD + time1ADR +
time2ADR,
data = training_data,
hidden = c(10,10,10,10),
err.fct = "sse",
linear.output = T,
threshold = 0.01,
lifesign = 'minimal',
rep = 5,
algorithm = 'rprop-',
stepmax = 100000)
plot(n, rep = 1)
# Prediction ---------------------------------------------------------------------------------------------
Predict = compute(n, test_data)
nn2 <- ifelse(Predict$net.result[,1]>Predict$net.result[,2],1,0)
predictVstest <- cbind(test_data, Predict$net.result)
sum(predictVstest$ganhador == nn2)/46
